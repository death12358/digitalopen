	-- probability.round.<OPERATION>.lua
	-- database: 3
	-- round data model(HASH) example:
	--	KEY: 	{WORKSPACE.<workspace>:GAME.<game_code>|ROUND} 
	--	VALUE: 	[
	--	key{<round_id>:<user_id>}: value{<round>},
	--]
	-- INPUT: 	
	--  EVALSHA  <script_sha1> 2 <workspace> <game_code> <round_id> <user_id>
	-- OUTPUT:
	-- 	json{
	--		"status": "ok",
	--		"round": <round>,
	-- }
	-- Status: 	
	-- 	"OK"			- success
	--  "ERROR"			- error
	-- 	"EXIST"			- exist
	-- 	"NOT_EXIST"		- not exist
	-- 	"NOT_ACTIVE"	- not active
	-- 	"NOT_STARTED"	- not started
	--  "ENDROUND"		- end round
    -- OPERATION: 
	--  START:    start game.
	--  NEXT:     next game or new game.
	--  Update:   update game.
	--  PEEK:     peek game.
	--  DELETE:   delete game.

-- -- Records - Game records
-- --  Id         - Record ID
-- --  Brand      - Brand
-- --  Username   - User
-- --  Case       - Game status
-- --  Stages     - Game stage or round
-- --  Pickem     - Selection
-- --  Symbol     - Prize
-- --  Multiplier - Score multiplier
-- --  Bet        - Bet amount
-- --  Point      - Score
-- Records = {
--   id = "",
--   brand = "",
--   username = "",
--   case = 0,
--   stages = 0,
--   pickem = {},
--   symbols = {},
--   multiplier = 0,
--   bet = 0,
--   point = 0,
-- }

-- -- Rounds - Game rounds
-- --  Identifier - Round ID
-- --  Brand      - Brand
-- --  User       - User
-- --  Status     - Round status , bitwisw
-- --  Position   - Round status flag, 0 means not started or finished
-- --  Satges     - Round stage or round
-- --  Result     - Round result
-- --  Currency   - Currency
-- --  Start      - Round start time
-- --  Fisish     - Round end time
-- --  TotalBet   - Total bet amount
-- --  TotalPoint - Total score
-- Rounds = {
--   id = "",
--   game_code = "",
--   brand = "",
--   username = "",
--   status = 0, 
--   position = 0,
--   stages = 0,
--   result = {},
--   currency = "",
--   start = 0,
--   finish = 0,
--   total_bet = 0,
--   total_point = 0,
-- }
